@rendermode InteractiveServer
@using Blazicons
@using Microsoft.FluentUI.AspNetCore.Components
@using OneUrl.Models
@inject IHttpClientFactory ClientFactory

<Modal @ref="modal" Title="Add Url">
    <BodyTemplate>
        <div class="dialog-body" style="gap: 1rem;">
            <TextInput @bind-Value="target" Placeholder="Target" />
            <TextInput @bind-Value="location" Placeholder="Location" />
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" @onclick="Send">Create</Button>
    </FooterTemplate>
</Modal>

<FluentButton IconStart="new Icons.Regular.Size16.Add()" OnClick="Open" Appearance="Appearance.Accent">
    Add
</FluentButton>

@code {
    public Modal modal = default!;
    private string? location;
    private string? target;
    private string? baseUri = System.Environment.GetEnvironmentVariable("API_URL");

    [Parameter]
    required public bool IsEditing {get; set;}

    private async Task Open()
    {
        await modal.ShowAsync();
    }

    private async Task Close()
    {
        await modal.HideAsync();
    }

    private async Task Send()
    {
        var client = ClientFactory.CreateClient("DefaultClient");
        await client.PostAsJsonAsync($"{baseUri}/manage/urls", new UrlRecord{location = location, target = target});
        await Close();
    }
}