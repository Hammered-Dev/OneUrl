@rendermode InteractiveServer
@using Blazicons
@using Microsoft.FluentUI.AspNetCore.Components
@using OneUrl.Components.Pages.Home.Shared
@using OneUrl.Models
@inject IHttpClientFactory ClientFactory
@inject IDialogService DialogService

<FluentButton IconStart="new Icons.Regular.Size16.Add()" @onclick="Open" Appearance="Appearance.Accent">
    Add
</FluentButton>

@code {
    public Modal modal = default!;
    private string? location;
    private string? target;
    private string? baseUri = System.Environment.GetEnvironmentVariable("API_URL");

    [Parameter]
    required public bool IsEditing {get; set;}

    private async Task Open()
    {
        DialogParameters parameters = new()
        {
            Title = "Add Url",
            Width = "500px"
        };

        IDialogReference dialogReference = await DialogService.ShowDialogAsync<EditUrlDialog>(parameters: parameters);
        DialogResult? result = await dialogReference.Result;

        if (result.Data is not null)
        {
            await Send((UrlRecord)result.Data);
        }
    }

    private async Task Close()
    {
        await modal.HideAsync();
    }

    private async Task Send(UrlRecord record)
    {
        var client = ClientFactory.CreateClient("DefaultClient");
        await client.PostAsJsonAsync($"{baseUri}/manage/urls", record);
        await Close();
    }
}